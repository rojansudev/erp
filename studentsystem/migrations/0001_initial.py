# Generated by Django 3.1 on 2020-09-06 18:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_name', models.CharField(db_column='Dept_name', max_length=20, primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=20, null=True)),
                ('hod', models.CharField(blank=True, db_column='HOD', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('inst_id', models.IntegerField(db_column='Inst_id', primary_key=True, serialize=False)),
                ('inst_name', models.CharField(blank=True, db_column='Inst_name', max_length=70, null=True)),
                ('inst_phone_no', models.CharField(blank=True, db_column='Inst_phone_no', max_length=12, null=True)),
                ('office', models.CharField(blank=True, db_column='Office', max_length=20, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=70, null=True)),
                ('designation', models.CharField(blank=True, db_column='Designation', max_length=20, null=True)),
                ('instr_dob', models.DateField(blank=True, db_column='Instr_DOB', null=True)),
                ('profile_link', models.CharField(blank=True, db_column='Profile_link', max_length=20, null=True)),
                ('dept_name', models.ForeignKey(blank=True, db_column='Dept_name', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='studentsystem.department')),
            ],
            options={
                'db_table': 'Instructor',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('stream_id', models.IntegerField(db_column='Stream_id', primary_key=True, serialize=False)),
                ('degree_type', models.CharField(blank=True, db_column='Degree_type', max_length=20, null=True)),
                ('branch', models.CharField(blank=True, db_column='Branch', max_length=10, null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('dept_name', models.ForeignKey(blank=True, db_column='Dept_name', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='studentsystem.department')),
            ],
            options={
                'db_table': 'Stream',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(db_column='Student_id', max_length=20, primary_key=True, serialize=False)),
                ('student_name', models.CharField(blank=True, db_column='Student_name', max_length=70, null=True)),
                ('enrollment_year', models.IntegerField(blank=True, db_column='Enrollment_year', null=True)),
                ('student_address', models.CharField(blank=True, db_column='Student_address', max_length=120, null=True)),
                ('student_phone_no', models.CharField(blank=True, db_column='Student_phone_no', max_length=20, null=True)),
                ('student_dob', models.DateField(blank=True, db_column='Student_DOB', null=True)),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=1, null=True)),
                ('father_name', models.CharField(blank=True, db_column='Father_name', max_length=70, null=True)),
                ('current_sem', models.IntegerField(blank=True, db_column='Current_sem', null=True)),
                ('current_year', models.IntegerField(blank=True, db_column='Current_year', null=True)),
                ('degree_status', models.CharField(blank=True, db_column='Degree_status', max_length=10, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=30, null=True)),
                ('stream', models.ForeignKey(blank=True, db_column='Stream_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='studentsystem.stream')),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(db_column='Course_id', max_length=30, primary_key=True, serialize=False)),
                ('course_name', models.CharField(blank=True, db_column='Course_name', max_length=50, null=True)),
                ('course_credits', models.IntegerField(blank=True, db_column='Course_credits', null=True)),
                ('course_type', models.CharField(blank=True, db_column='Course_type', max_length=2, null=True)),
                ('lec', models.IntegerField(blank=True, db_column='Lec', null=True)),
                ('tut', models.IntegerField(blank=True, db_column='Tut', null=True)),
                ('lab', models.IntegerField(blank=True, db_column='Lab', null=True)),
                ('course_mode', models.CharField(blank=True, db_column='Course_mode', max_length=20, null=True)),
                ('course_year', models.IntegerField(blank=True, db_column='Course_year', null=True)),
                ('course_sem', models.IntegerField(blank=True, db_column='Course_sem', null=True)),
                ('total_seats', models.IntegerField(blank=True, db_column='Total_seats', null=True)),
                ('total_enrolled', models.IntegerField(blank=True, db_column='Total_enrolled', null=True)),
                ('dept_name', models.ForeignKey(blank=True, db_column='Dept_name', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='studentsystem.department')),
            ],
            options={
                'db_table': 'Course',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_type', models.CharField(db_column='Section_type', max_length=3, primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=20, null=True)),
                ('section_hour', models.IntegerField(blank=True, db_column='Section_hour', null=True)),
                ('mon', models.IntegerField(blank=True, db_column='Mon', null=True)),
                ('tue', models.IntegerField(blank=True, db_column='Tue', null=True)),
                ('wed', models.IntegerField(blank=True, db_column='Wed', null=True)),
                ('thu', models.IntegerField(blank=True, db_column='Thu', null=True)),
                ('fri', models.IntegerField(blank=True, db_column='Fri', null=True)),
                ('sat', models.IntegerField(blank=True, db_column='Sat', null=True)),
                ('course', models.ForeignKey(db_column='Course_id', on_delete=django.db.models.deletion.DO_NOTHING, to='studentsystem.course')),
                ('inst', models.ForeignKey(blank=True, db_column='Inst_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='studentsystem.instructor')),
            ],
            options={
                'db_table': 'Section',
                'unique_together': {('section_type', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('student', models.OneToOneField(db_column='Student_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='studentsystem.student')),
                ('course_grade', models.CharField(blank=True, db_column='Course_grade', max_length=2, null=True)),
                ('enroll_date', models.DateField(blank=True, db_column='Enroll_date', null=True)),
                ('course_status', models.CharField(blank=True, db_column='Course_status', max_length=10, null=True)),
                ('course', models.ForeignKey(db_column='Course_id', on_delete=django.db.models.deletion.DO_NOTHING, to='studentsystem.course')),
            ],
            options={
                'db_table': 'Enroll',
                'unique_together': {('student', 'course')},
            },
        ),
    ]
